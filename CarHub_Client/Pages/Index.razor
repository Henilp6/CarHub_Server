@page "/"
@inject ICarService _carService
@inject ICarTypeService _carTypeService
@inject IBrandService _brandService
@inject ICarImageService _carImageService






@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
<div class="container">


        <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
            </div>
            <div class="carousel-inner">
                <div class="carousel-item active">

                    <img src="https://media.zigcdn.com/media/content/2023/Aug/64dcac7c1591e_720x540.jpg" style="height: 570px" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="https://stimg.cardekho.com/images/carexteriorimages/930x620/Hyundai/Exter/9482/1684926596004/headlight-43.jpg" style="height: 570px" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="https://stimg.cardekho.com/images/carexteriorimages/930x620/Hyundai/Exter/9482/1684926596004/exterior-image-164.jpg" style="height: 570px" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                    </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>


        @*Home page*@

        
    <div class="row  pb-3 pt-3 backgroundWhite">

            <h2>
                All Brands
            </h2>
           

                <div class="container-fluid justify-content-evenly ">
                    <div class="row">

                        @if (homeVM.BrandList != null)
                        {
                            foreach (var brand in homeVM.BrandList)
                            {
                                <div class="col-2 text-center border m-2 p-2">
                                <a href="@($"brandIndex/{brand.Id}")">
                                    <img src="@brand.BrandImage" class="card-img-top rounded" />
                                     </a> 
                                    <p class="card-title h5 text-dark opacity-75 text-uppercase text-decoration-none text-center">@brand.BrandName</p>
                                </div>


                                @*<div class="col-2 text-center  border m-2 p-2 ">
                    <a href="@Url.Action("BrandIndex", "Home", new { brandId = brand.Id })">
                    <img src="@brand.BrandImage" class="card-img-top rounded" />
                    <p class="card-title h5 text-dark opacity-75 text-uppercase text-decoration-none text-center">@brand.BrandName</p>
                    </a>
                    </div>*@
                            }
                        }
                    </div>
                </div>

           

            <div class="row pb-3">
                @foreach (var car in homeVM.CarList)
                {


                    <div class="col-lg-3 col-sm-6 ">


                        <div class="row p-2">
                            <div class="col-12 p-1 h-100 ">

                                <div class="card border-0 p-3 shadow  border-top border-5  rounded  ">

                                    <div>
                                        @* <a href="@Url.Action("Details", "Home", new { carId = car.Id })"> *@
                                            <img src="@car.ImageURL" class="card-img-top rounded" height="150px" width="150px" />

                                        @* </a> *@
                                    </div>

                                    <div class="card-body pb-0">
                                        <div>
                                            @*<a href="@Url.Action("Details", "Home", new { carId = car.Id })">*@

                                            <div class="pl-1">
                                                <p class="card-title h5 text-dark opacity-75 text-uppercase text-center">

                                                    @car.Name @* @TruncateText(car.Name, 2)*@


                                                </p>
                                                <p class="card-title text-warning text-center">by <b>@car.Brand.BrandName</b></p>
                                            </div>
                                            <div class="pl-1">
                                                <p class="text-dark text-opacity-75 text-center mb-0">
                                                    Starting Price:
                                                    <span>
                                                        @car.StartingPrice.ToString("c")
                                                    </span>
                                                </p>
                                            </div>
                                            <div class="pl-1">
                                                <p class="text-dark text-opacity-75 text-center">
                                                    End Price:
                                                    <span>
                                                        @car.EndPrice.ToString("c")
                                                    </span>
                                                </p>
                                            </div>
                                            @* </a>*@
                                        </div>
                                    </div>
                                    <div>
                                      @*   <a asp-action="Details" asp-route-carId="@car.Id" class="btn btn-primary bg-gradient border-0 form-control">
                                            Details
                                        </a> *@
                                        <a href="@($"details/{car.Id}")" style="margin-left: 20px;" class="btn btn-primary bg-gradient border-0 form-control">  Details</a>
                                    </div>




                                </div>
                            </div>
                        </div>

                    </div>




                }
            </div>
            

    </div>
</div>
}

@code{
    public bool IsProcessing { get; set; } = false;
    // public IEnumerable<CarDTO> Cars { get; set; } = new List<CarDTO>();
    // public IEnumerable<CarTypeDTO> CarTypes { get; set; } = new List<CarTypeDTO>();
    // public IEnumerable<BrandDTO> Brands { get; set; } = new List<BrandDTO>();
    // public IEnumerable<CarImageDTO> CarImages { get; set; } = new List<CarImageDTO>();
    private HomeVM homeVM { get; set; } = new HomeVM();


    protected override async Task OnInitializedAsync()
    {
        IsProcessing=true;

        var carlist = await _carService.GetAllAsync<APIResponse>();
        if (carlist != null && carlist.IsSuccess)
        {
            homeVM.CarList = JsonConvert.DeserializeObject<List<CarDTO>>(Convert.ToString(carlist.Result));
        }
        var cartypelist = await _carTypeService.GetAllAsync<APIResponse>();
        if (cartypelist != null && cartypelist.IsSuccess)
        {
            homeVM.CarTypeList = JsonConvert.DeserializeObject<List<CarTypeDTO>>(Convert.ToString(cartypelist.Result));
        }
        var brandlist = await _brandService.GetAllAsync<APIResponse>();
        if (brandlist != null && brandlist.IsSuccess)
        {
            homeVM.BrandList = JsonConvert.DeserializeObject<List<BrandDTO>>(Convert.ToString(brandlist.Result));
        }
        var carimagelist = await _carImageService.GetAllAsync<APIResponse>();
        if (carimagelist != null && carimagelist.IsSuccess)
        {
            homeVM.CarImagelist = JsonConvert.DeserializeObject<List<CarImageDTO>>(Convert.ToString(brandlist.Result));
        }


        IsProcessing=false;
    }
}