@page "/brand/create"@using CarHub_Server.Helper;
@inject IJSRuntime _jsRuntime@inject IBrandService _brandService@inject NavigationManager _navigationManager<div class="row my-2">    <h3 class="card-title text-primary mb-3 ml-3">Create Brand</h3>    <div class="col-10">        @if (IsLoading)        {            <div class="text-center">                <img src="/images/loading.gif">            </div>        }        else        {            <EditForm Model="Brand" OnValidSubmit="BrandCreate">                <DataAnnotationsValidator />                @*<ValidationSummary/>*@                <div class="form-group">                    <label>Brand Name</label>                    <InputText @bind-Value="Brand.BrandName" class="form-control"></InputText>                    <ValidationMessage For="()=>Brand.BrandName"></ValidationMessage>                </div>                       @* <div class="form-group col-6">                    <div class="form-check">                        <InputCheckbox @bind-Value="Brand.IsActive" class="form-check-input" checked></InputCheckbox>                        <label class="form-check-label">Is Active</label>                    </div>                </div> *@                <div class="form-group py-2">                    <button class="btn btn-primary">Create</button>                    <NavLink href="brand" class="btn btn-secondary">Back to Index</NavLink>                </div>            </EditForm>        }    </div></div>@code{    [Parameter]    public int Id { get; set; }    private BrandCreateDTO Brand { get; set; } = new BrandCreateDTO();    public bool IsLoading { get; set; }    protected override async Task OnAfterRenderAsync(bool firstRender)    {        if (firstRender)        {            IsLoading = false;        }    }


    private async Task BrandCreate()    {
        var response = await _brandService.CreateAsync<APIResponse>(Brand);        if (response != null && response.IsSuccess)        {            await _jsRuntime.ToastrSuccess("Brand Create Sucessfully.");            _navigationManager.NavigateTo("country");        }        else        {            if (response.ErrorMessages.Count > 0)            {                await _jsRuntime.ToastrError(response.ErrorMessages.FirstOrDefault());            }        }            }}